<div class="notebook">

<div class="nb-cell markdown">
# R/SWISH demos

First, we make some trivial plots using an R vector, Prolog list and a _quasi quotation_.
</div>

<div class="nb-cell query">
&lt;- plot(c(1,2,3)).
</div>

<div class="nb-cell query">
&lt;- plot([1,2,3,4]).
</div>

<div class="nb-cell query">
{|r||plot(c(1,2,3))|}.
</div>

<div class="nb-cell query">
numlist(1, 25, Data),
{|r(Data)||plot(Data)|}.
</div>

<div class="nb-cell markdown">
## Fetch data from R

These example shows fetching data from R.
</div>

<div class="nb-cell query">
A &lt;- 1:10.
</div>

<div class="nb-cell query">
A &lt;- {|r||1:10|}.
</div>

<div class="nb-cell markdown">
## Performance tests for transferring data

Below we compare computing the mean from a list of 1M integers through R as well as natively in Prolog.  It turns out R does the job faster on a large number of integers than Prolog.  Why?  Once in R, the array is a simple C array of integers, causing a blindly fast addition.  The Prolog counterpart adds the numbers one-by-one and does rigid overflow checking and handling.
</div>

<div class="nb-cell query">
numlist(1, 1 000 000, _L),
time(A &lt;- mean(_L)).
</div>

<div class="nb-cell query">
numlist(1, 1 000 000, _L),
time(sum_list(_L, Sum)).
</div>

<div class="nb-cell markdown">
## Show error handling
</div>

<div class="nb-cell query">
A &lt;- {|r||a b|}.
</div>

<div class="nb-cell markdown">
## Using ggplot2 to render plots

The library("ggplot2") can be used for rendering plots.  Unlike native plot() however, the call should be made with &lt;-/1.
</div>

<div class="nb-cell program">
:- &lt;- library("ggplot2").
</div>

<div class="nb-cell query">
&lt;- {|r||qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5), main="Distribution of Gas Milage", xlab="Miles Per Gallon", ylab="Density")|}.
</div>

<div class="nb-cell markdown">
## Query and handle data frames

This shows how to print a data frame and how to get the data into Prolog.  Note that the interface merely fetches the matrix as a nested list of columns.  We need utilities to create and extract dataframes.  In particular a call that creates an R data frame from the solutions of a goal.
</div>

<div class="nb-cell program" data-background="true">
:- use_rendering(table).
</div>

<div class="nb-cell query">
&lt;- mtcars.
</div>

<div class="nb-cell query">
MtCars &lt;- mtcars,
Cols &lt;- colnames(mtcars),
Rows &lt;- rownames(mtcars).
</div>

</div>
